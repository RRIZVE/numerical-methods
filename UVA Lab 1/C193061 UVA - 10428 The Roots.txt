//********Bismillah-ir-Rahman-ir-Rahim***********\
//In the Name of Allah
//La ilaha illallah Muhammadur Rasulullah
//Rabbir Hamhuma Kama Rabba Yani Sagheera

#include<bits/stdc++.h>
using namespace std;


typedef long long ll;
typedef unsigned long long ull;
typedef double ld;

#define vi vector<int>
#define vll vector<ll>
#define vs vector<string>
#define pll pair<ll,ll>
#define vp vector<pair<ll,ll>>
#define pb push_back
#define ff first
#define ss second
#define pi acos(-1.0)
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define eps 1e-7

ll ceilAB(ll a, ll b)
{
    return (a + b - 1) / b;
}
ll Pow(ll c, ll d)
{
    return d == 0 ? 1 : c * pow(c, d - 1);
}
ll gcd(ll a, ll b)
{
    return b == 0 ? a : gcd(b, a % b);
}
ll lcm(ll a, ll b)
{
    return ((a * b) / gcd(a, b));
}

#define fraction() cout.unsetf(ios::floatfield); cout.precision(4); cout.setf(ios::fixed,ios::floatfield);


const int mx = 8;
ld x, a[mx], q[mx], root[mx];

int i, n, cnt, t;

ld f(ld *a, int n, ld x)
{
    ld sum, p=1;

    for(int i = sum = 0; i <= n; i++, p*=x)
    {
        sum += a[i]*p;
    }
    return sum;
}

ld fprime(ld *a, int n, ld x)
{
    ld sum, p=1;
    for(int i = sum = 0; i <= n; i++, p*=x)
    {
        sum += a[i+1] * (i+1) * p;
    }
    return sum;
}


void solve()
{

    t=0;
    while(cin>>n)
    {
        if(!n)
        {
            break;
        }

        t++;
        fraction();
        for(int i = n; i >= 0; i--)
        {
            cin>>a[i];
        }

        vector<ld> ans;

        for(int j=1 ; j<=n; j++)
        {
            for(x=0; fabs( f(a, n, x) ) > eps; )
            {
                x -= f(a, n, x) / fprime(a, n, x);
            }

            ans.pb(x);

            q[n] = 0;

            for(int i = n-1; i >= 0; i--)
            {
                q[i] = a[i+1] + x*q[i+1];
            }

            for(i=n; i>=0; i--)
            {
                a[i]=q[i];
            }


        }


        cout<<"Equation "<<t<<": ";

        int N=ans.size();
        sort(ans.begin(),ans.end());

        for(int i=0; i<N-1; i++)
        {
            cout<<ans[i]<<" ";

        }

        cout<<ans[N-1]<<endl;


    }





}



int main()
{



    solve();
    return 0;

}
